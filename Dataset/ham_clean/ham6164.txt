 jeremy hylton   think one step towards deployment creating reusable tokenizer  mail message  current codebase nt expose easytouse  easytocustomize tokenizer  tokenize   could nt easier use  take string argument  produce stream token  whether via explicit list  generator  tuple   nt matter   tokenize   function httpaddr httpaddr freely interchangeable way  note evidence support customizable tokenizer would good   would  way customization could helpful  s research issue work done   timtest module seems contain enormous body practical  knowledge parse mail message  module nt  designed reuse  s partly failure imagination  splitting knowledge tokenization large block cutandpaste   s done  change timtoken import tokenize top use tokenizer  want make easier still  feel free check something better   d like see module take single message collection  message tokenize one  msg msgstream class httpaddr start  s hard anything truly  useful  people use sort different physical representation email msg  mboxes various format  one file per  folder   one file per msg  skip s gzipped gimmick     re python coder    find easy change gut msg msgstream handle peculiar scheme  defining interface guy done   d like see tokenize customizable   tim exclude  header test data  particular bias  test data  people test data without  bias  ought able customize tokenizer include  exclude others  sound like bottomless pit  s easier way customize edit code  httpaddr still say  though  massive refactoring would help  hop 
