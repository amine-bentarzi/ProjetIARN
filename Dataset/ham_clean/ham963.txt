hi kragen  interesting analysis  think couple nit might pick  example  nt expect market well developed highest bidder   think important issue  end user wo nt able fix system  almost passed  know know  allude  essay getting passed around  might want add bit sysadmin others  s one point nt make  think important  research defining addressing class vulnerability ca nt happen without library available vulnerability code  think three researcher automated method addressing vulnerability griped  uninvited  quality existing vulnerability site  research set requires enough example  open  define set  set added time time make test prediction  feel fairly confident saying without full disclosure  would nt stackguard  itsnumber  nissus  snort  security admin s job would lot harder  adam thu  aug number  number number  number  numberam number  eugen leitl wrote      eugen  leitl leitl    icbmto  nnumber numbernumbernumber  enumber numbernumbernumber  httpaddr  numberenumbercanumber  edenumber number number anumberb numberanumber numberanumber aanumber numberenumber numberenumber canumber         forwarded message       date  thu  number aug number number  number  number number  edt    kragen sitaker   httpaddr  subject  underground software vulnerability marketplace hazard   august numberth  entity known  idefense  sent announcement   appended email  briefly   idefense   bill   global security intelligence company   offering cash  information security vulnerability computer software  publicly known  especially promise tell  anyone else    kind secret traffic allowed continue  pose  serious threat computer communication infrastructure    moment  dominant paradigm computer security research  known  full disclosure   people discover security  vulnerability software tell vendor  short  later   vendor chance fix problem    publish information  including code exploit  vulnerability  possible    method proven far superior old paradigm established  cert late number  proponent might call  responsible  disclosure    never release working exploit code  never release  information vulnerability vendor released  patch  procedure often left hundred thousand computer  vulnerable known bug month year vendor worked  feature  often  even patch released  people  would nt apply nt know serious problem     underground computer criminal community would often discover  exploit hole month year  responsible  disclosure  process kept victim  connection  underground  vulnerable    problem vulnerability widely known  much le dangerous  victim take step  reduce potential impact   including disabling software   turning vulnerable feature  filtering traffic transit   detecting responding intrusion  therefore much le  useful wouldbe intruder  also  software company usually see  security vulnerability software pr problem   prefer delay publication  expense fixing bug   long possible    idefense offering new alternative appears far dangerous  either two previous paradigm  want buyer  marketplace secret software vulnerability information  rewarding  discoverer vulnerability cash    long  snosoft  group security researcher evidently  including criminal element  apparently made offer sell  secrecy software vulnerability information software  vendor  specifically  apparently made private offer  hewlettpackard keep vulnerability hp s trunumber unix secret  hp retained snosoft s  consulting service   hp considered  extortion responded legal threat  snosoft published  information    allowed happen  cause two problem   together  add catastrophe    first  secret software vulnerability information available  highest bidder  nobody else  reason explained later   think highest bidder generally organized crime  syndicate  although obvious seller    second  finding software vulnerability keeping secret  become lucrative many talented people  result     responsible disclosure  day   good  guy remain vulnerable month year  majority  current vulnerability kept secret    ve heard argued highest bidder generally  vendor vulnerable software  nt think s  plausible  someone steal dollarnumber number software bug let   software vendor never held liable  often  fact   people administer software nt liable  either    credit card data stolen ecommerce site  example   knowing vulnerability anyone else might save website  administrator time  might save software vendor  negative pr  net thief thousand dollar    think highest bidder early vulnerability  information lucrative   thief use  execute largest heist without getting caught  inevitably   mean organized crime syndicate  although particular gang  good networked theft may yet exist    might occasional case market leader   microsoft  could make money giving competitor bad pr  gang could make theft  think remoteroot hole  samba  example    right  people know find security exploit either  motivated personal interest subject  motivated public  interest  motivated desire individual recognition   personally know criminal benefit exploit  creating  marketplace secret vulnerability information would vastly  increase availability information people  afford pay  spy  terrorist  organized crime    let s let happen       original idefense announcement     sunil james  httpaddr   sent  wednesday  august number  number number  number pm  subject  introducing idefense s vulnerability contributor program    greeting    idefense pleased announce official launch vulnerability  contributor program  vcp   vcp pay contributor advance  notification vulnerability  exploit code malicious code    idefense hope might consider contributing vcp  following  provides answer basic question program    q work   a idefense understands majority security researcher publish  security research compensation  rather  could number  motivation  including following     pure love security research   desire protect harm targeted network   desire urge vendor fix product   publicity often accompanies disclosure   vcp want research made public  internet community  would also like paid  httpaddr compensation depend  among thing  following  item     kind information shared  ie  vulnerability exploit    amount detail analysis provided   potential severity level information shared   type application  operating system   software hardware potentially affected   verification idefense lab   level exclusivity   data granted idefense   q contribute vcp   a vcp open individual  security research group  entity    q launching program   a timeliness remains key aspect security intelligence  contribution  list take time publication public large   often  many service charge client access without paying  original contributor  idefense program  contributor  compensated  idefense lab verifies issue  idefense client  public large warned timely manner    q get credit   a contributor always credited discovering vulnerability  exploit information    q contribute   vcp active  welcome begin contributing today    learn  go httpaddr  question would like sign contributor vcp  please  contact u httpaddr   regard    sunil james  technical analyst  idefense    idefense global security intelligence company proactively  monitor source throughout world  technical vulnerability  hacker profiling global spread virus malicious code   ialert security intelligence service provides decisionmakers  frontline  security professional network administrator timely access  actionable intelligence decision support cyberrelated threat   idefense lab research wing verifies vulnerability  examines  behavior exploit malicious code discovers new  softwarehardware weakness controlled lab environment     httpaddr    seldom liberty kind lost   hume httpaddr
