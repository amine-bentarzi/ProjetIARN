rohit wondering microsoft s definition chief software architect   consequently  microsoft think roadmap   go  mr ballmer mr gillmor mr fork  architecture war  love em hate em  least microsoft understands  chief sa  billg oversees product strategy   two thing road map  one piece paper tell everyone record bunch bottomup plan  something impose broadly vision top  going try get everything shared   s path getting everything stopped  time trying take top four five thing trying longhorn wave  yukon wave  net wave really enough time crosscutting discussion make happen    bill  gate  dedicated fulltime chief software architect  also happens chairman company  spends time chief software architect  body meet every month  sltt  senior leadership technical team   basically top people involved productcreating strategy  present discus issue  bill driving process wave  instance   ask  crosscutting scenario want    get right product group together bring thing front sltt    people talk take good manager  people talk good coach getting people like  large organization thing important  certain level   important thing people make better give framework work harmony people company  bill s perspective   framework  technical road map sltt process  scenario  perspective  p  l  profit loss  structure multiple business  given work  giving people framework get make whole bigger sum part mean better offering   httpaddr ballmer charge july number  number number  number pm pt one know better microsoft ceo steve ballmer  net platform evolves  success microsoft depends well company coordinate tool  server  client strategy well communicates vision  interview infoworld test center director steve gillmor infoworld editor large ed scannell microsoft fusion number  ballmer discussed progress net  change company s approach product development  microsoft s effort simplify product licensing inspire trust customer partner   last time talked two year ago  beginning net  era  net evolution  let start talking think xml revolution first    talk net  believe industry collectively decided last three four year world going replatformed xml key foundation  s like anyone ever got together decide  s like magnetic north  s clearly indicated everyone rallying around concept  think degree  xml  pervasive might still underestimated  lot partner  even conference  see btob big company  really way software general designed  way security work  management  everything changed  answer direct question  two year ago might said jury still whether  xml  going happen  questioning going legitimate competitor java  world decided embrace  xml  basis next generation technology  lot benefit come  could something xml  sure could  nt specific technical implementation  merely fact come internet standard  deeper semantic ability  interoperability connection  context  net  ll say couple thing   number  would say momentum market  customer using net product line  like merrill  lynch   credit suisse  mark  spencer  citibank  variety others  people thing real  feel like degree front way smaller way larger    smaller sense everyone talking xml talk  even sun  bigger execution sense  ve delivered  delivered first batch product really built xml core  visual studio net biztalk server  getting traction  feel good execution relative everyone else  say people nt reasonable bolton xml support stuff   heavy lifting convince customer  partner follow along  set standard  adoption upgrading next generation  present picture behaving consistently within framework focusing customer issue customer satisfaction trustworthy computing  articulated  thing would done differently  numbernumber hindsight  would increased focus security deployment  lot security problem actually deployment problem  fix  sometimes ca nt get tool hand deploy fix fast enough  licensing  know would given time  better way plan around kind change made  still going get smart full ramification   expect change made july number  licensing numbernumber  lot pushback   nothing happen july number  continue learn time need earn customer  trust earn business  think many people pushing back really nt even know new term   nt fault educating  yes  fault  meet plenty customer whose company already license  saying   think s problem   nt deny problem  sure issue work time  july number going see real issue  talking customer show saying thought would problem  told completed deal company universally licensed total cost company lower  said  oh really   ll go july number  lot customer signed license  sure going find issue  bigger concern today probably larger account  may issue need address among smallersize company    net initiative change way inhouse client server  developer work together  trying health net health company sanity people work quality product produce orchestrated  ¸berroad map going  two thing road map  one piece paper tell everyone record bunch bottomup plan  something impose broadly vision top  going try get everything shared   s path getting everything stopped  time trying take top four five thing trying longhorn wave  yukon wave  net wave really enough time crosscutting discussion make happen  bill  gate  dedicated fulltime chief software architect  also happens chairman company  spends time chief software architect  body meet every month  sltt  senior leadership technical team   basically top people involved productcreating strategy  present discus issue  bill driving process wave  instance   ask  crosscutting scenario want    get right product group together bring thing front sltt  people talk take good manager  people talk good coach getting people like  large organization thing important  certain level   important thing people make better give framework work harmony people company  bill s perspective   framework  technical road map sltt process  scenario  perspective  p  l  profit loss  structure multiple business  given work  giving people framework get make whole bigger sum part mean better offering   seems scenario construct really working   evolution solution approach  would say pretty direct extrapolation solution stuff  think getting little experience  think use word scenario often solution le  solution sound like fixed thing  end day  thing customizable programmable  people make solution want  still scenario  software deployment look like  well  scenario involves window  office  application  working hard make sure whole bigger sum part  s say people always comfortable  ca nt even say perfectly  lot better  think would big step forward customer   approach cut technology civil war  microsoft past involving going gain control  project  seems democratic approach development  would use word democracy describe  people come together ultimately make decision  voting process  agenda think important  get lot input    decided  people nt get vote foot  try make quantum leap term ability improve pulling together piece  customer want u  simplifying concept unifying  customer nt say want u   go  ahhh  get  make sense   nt want go six meeting people say  is workflow strategy biztalk    what s office workflow strategy   why synchronization way better email outlook file folder web page   get sort synchronization sometimes  get highlevel road map work  build something nt today  talking unifying storage  best way get stuff work get work one way  keep tuning one set parameter instead thousand flower blooming   fusion keynote today  talked competitor   usual suspect  one nt mention   competing last generation technology  always  given stuff nt wear break  question whether break  ballmer grin   nt break like machinery  get anyone something new  something interesting innovative  people think  ok  upgrade try sell new product  decided user like u level system integration nt get involved  take sharepoint team service  put office  could sold team service separate product  could introduced new sku  stock keeping unit   could decided work level old office new version office  could realtime communication  tend like put thing together  integrate  release batch  number   upgrades   form introducing new innovation  matter  stuff wear  convince people idea better powerful older idea  two aspect  one aspect  given product upgrade release  make sense  convince nyear period time enough innovation want licensed innovation  part whole licensing discussion  moved new licensing two reason  would say   number  wanted simplify licensing  look back year  guarantee simpler  nothing simpler transition learning new familiar old  think people eventually realize simpler  licensing got pretty complicated year  people came understand  issue  timing delivering  innovation  nt want lot rough question  customer   new idea  s like  ok  put upgrade one stream stuff best customer access term contract  think long run better chance satisfying latter hitting six different upgrade  fan  letting  customer decide  ok  want piece piece  licensed  two thing sought   get back trust issue  frontload  s  big  lumpy upgrade  backload vision   net number server  long gap middle  sell untrusting audience  truth  need better  thing big lumpy  like new file system  s like sort small user feature  change file system  storage  backup  probaby thing going change  probably shell ought httpaddr application  lot thing going change  call lumpy  put four new feature powerpoint  sure  would look lumpy user  think build trust model  going deliver time  come overnight  people see thing   innovation lumpy  come evenly steadily  people develop confidence faith  like aspect model  time  support need become intimately involved story  know  nt know exactly mean yet  whole notion software service  licensing business discussion  s software get rearchitected world internet  mean  many software product fundamentally different internet  many  probably antivirus guy keep best  always feeding new virus support  asked audience  fusion  many use window update  s small piece software  big  s consumer market  ve got get really purr corporate market   lack broadband buildout adoption seems holding  ability user take advantage new service re  talking  bill  gate  invested comcast cable   triggered baby bell get board dsl   deal issue   number thing  make software compelling people start saying  well  course going get broadband    numbernumber one compelling feature  yes   hotel sun valley   utah   week wired  turned pc  xp tell wireless network available  connect something called mountaineer  well  nt know  vpn microsoft  worked  nt know whose broadband used  nt see bill s room  called said  hey  come room   soon everyone connecting internet room  support modality  whether gprs  general packet radio service  numbernumber  make easy provision software perspective thing go dsl   cable modem   software want broadband link  many thing say really care performance  downloading powerpoint file  want broadband  thing speed otherwise ca nt without speed  going put lot pressure broadband community  s weird answer  normal answer  yeah  nt awful  enough broadband  price charge   agree  look happened japan recently  big drop  dollarnumber month dsl  vroom  gone almost dsl connection year ago numbernumber  million  numbernumber million  subscriber    make happen country  think beyond u  enough interest consumer looking intensely broadband  whether today s price tomorrow s price  going shake marketplace  think marketplace good job  make something obvious consumer want  happen live neigborhood broadband network  dsl cable modem  well  neighbor   teledesic chairman coceo  craig mccaw  wireless network think piggyback  ballmer laugh    yes  broadband bottleneck  also think look oursleves software industry say  are nt   bottleneck   built software make broadband musthave   microsoft ceo weighs   ballmer address number key issue customer partner    security trust   thing would done  differently     coordinating product group   working hard make sure  whole bigger sum part     product licensing   still going get smart  full ramification     httpaddr  long sig alert  believe quite possible productively apply supposedly incompatible approach  rest  soap  together  ll sketch  prescriptive form  note  proscriptive  expected local adaptation provided  number  start modeling persistent resource wish expose  persistent resource  referring entity typical life expectancy day greater  ensure instance unique url  possible  assign meaningful name resource  number  whenever possible  provide default xml representation representation  unlike traditional object oriented programming language unique getter per property  typically single representation entire instance  representation often contain xlinks  aka  pointer reference  instance  number  add high level method take care composite create  update  delete operation  key aspect design message operation need self contained  sender receiver able make absolute minimum assumption s state  multiple request required implement single logical operation  request provide appearance executed atomically  number  query operation deserve special consideration  general purpose xml syntax provided every case  addition  reasonable expectation exists query parameter relatively short size require significant encoding  http get parameter encoded query string also provided  implication following table emphasizes unified approach differs  pure   albeit hypothetical  different position described  number  resource  post operation explicitly possibility modifying multiple resource  put delete operation rarely used  ever  get may contain query argument  number  get  get must never used operation observably change state recipient  post used instead  number  message  presume url static  instead presume identify resource  particular  recognize url dynamically generated  expect url soap resource response  use soap response mep pure retrieval operation  number  procedure  treat url implicit first parameter  allow url dynamically generated  returned structure  use http get retrieval operation  conclusion looking future  application level internetworking protocol emerge today likely application level intranetworking protocol next decade  rest soap contain feature others lack  significantly  rest  soap  xlink key bit functionality soap application miss today ability link together resource  soap numbernumber make significant progress addressing  hopefully wsdl numbernumber complete important work  soap  rest  stored procedure looking large scale system cope update provides key insight productive area future research respect rest  finally  bear repeating  service using http get  nt mean rest  encoding parameter url  probably making rpc request service  retrieving representation resource  worth reading roy fielding s thought subject  exception rule routinely condoned within rest crowd query   sam ruby  httpaddr httpaddr
